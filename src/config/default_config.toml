# All alternatives are listed in `pub enum DirectionKeys {...}` in `src/config/direction_keys.rs`
direction_keys = "HjklAndArrows"

# All alternatives are listed in `color_theme_presets!(...)` in `src/config/color_theme.rs`
color_theme_preset = "Basic"

# Row numbers
[numbers.row]
enable = true
relative = false

# Column numbers
[numbers.column]
enable = true
relative = false

# Each property of [brush_keys] is a `KeyCodeToml`, which allows either one of the special keys
# ("Backspace", "Enter", "Left", "Right", "Up", "Down", "Home", "End", "PageUp", "PageDown", "Tab", "BackTab", "Delete", "Insert", "Null", "Esc")
# , an F-key ("F1"-"F255"), or a single character for all other keys (e.g. "d" or "#").
[brush_keys]
fg = "f"
bg = "b"
character = "c"
modifiers = "m"
all = "a"

[keymaps.actions]
"u" = { "Undo" = {} }
"<C-r>" = { "Redo" = {} }
":" = { "ModeCommand" = {} }
"a" = { "ModeInsert" = { jump = "Diagonals" } }
"gc" = { "ModeColorPicker" = {} }
# "r" = { Operate = { operation = { Replace = {} } }
"gp" = { "Pipette" = { "ground" = "Foreground"} }
"v" = { ModeVisualRect = {} }
"o" = { HighlightSelection = {} }
"O" = { HighlightSelectionClear = {} }
"p" = { Paste = {} }

[keymaps.operators]
"c" = { "Colorize" = { ground = "Foreground"} }
"b" = { "Colorize" = { ground = "Background"} }
"r" = { Replace = {} }
"d" = { Replace = { ch = " "} }
"s" = { UpdateSelection = {} }
"a" = { UpdateSelection = { operator = "Add" } }
"y" = { Yank = { content_type = "ALL" } }

[keymaps.motions]
" " = { Stay = {} }
"w" = { WordBoundary = { boundary_type = "START" } }
"e" = { WordBoundary = { boundary_type = "END" } }
"f" = { FindChar = {} }
"s" = { SelectionMotion = {} }

[keymaps.directions]
"h" = { rows = 0, columns = -1 }
"j" = { rows = 1, columns = 0 }
"k" = { rows = -1, columns = 0 }
"l" = { rows = 0, columns = 1 }
"y" = { rows = -1, columns = -2 }
"u" = { rows = -1, columns = -1 }
"i" = { rows = -1, columns = 1 }
"o" = { rows = -1, columns = 2 }
"n" = { rows = 1, columns = -2 }
"m" = { rows = 1, columns = -1 }
"," = { rows = 1, columns = 1 }
"." = { rows = 1, columns = 2 }
# Special no-movement motion needs to be implemented. This currently crashes.
# " " = { rows = 0, columns = 0 }

[keymaps.grounds]
"f" = "Foreground"
"b" = "Background"

[keymaps.characters]
"<C-u>-" = "â€”"

[keymaps.word_boundary_types]
"a" = "ANY"
"s" = "START"
"e" = "END"

[keymaps.colors]

[keymaps.canvas_iteration_jump]
"d" = "Diagonals"
"s" = "DirectionAsStride"

[keymaps.update_selection_operators]
"a" = "Add"
"w" = "Overwrite"
"s" = "Subtract"

[keymaps.yank_content_type]
"a" = "ALL"
"t" = "TEXT"
"f" = "FG"
"b" = "BG"
"c" = "COLOR"
"m" = "MODIFIERS"

# A [[normal_mode_keybindings]] describes a single keybinding. Entries defined in local config sources
# will be appended to the defaults. Each key can only have one action, meaning that you override default
# keybindings by configuring another action to the same key. You can remove a keybinding by configuring
# the key to the "DoNothing" action.
# The value of the `key` property is a `KeyCodeToml`, just like the properties of [brush_keys]
# All actions are listed in `action_collection!(UserAction, ...)` in `src/actions.rs`
[[normal_mode_keybindings]]
key = "d"
action = "ModeChooseInsertDirection"

[[normal_mode_keybindings]]
key = "i"
action = "ModeInsertRight"

[[normal_mode_keybindings]]
key = "r"
action = "ModeReplace"

[[normal_mode_keybindings]]
key = "e"
action = "ModeChangeBrush"

[[normal_mode_keybindings]]
key = "u"
action = "Undo"

[[normal_mode_keybindings]]
key = "r"
modifiers = "CONTROL"
action = "Redo"

[[normal_mode_keybindings]]
key = " "
action = "BrushApplyAll"

[[normal_mode_keybindings]]
key = "s"
action = "BrushSwapFgBg"

[[normal_mode_keybindings]]
key = "p"
action = "ModePipette"

[[normal_mode_keybindings]]
key = ":"
action = "ModeCommand"

[[normal_mode_keybindings]]
key = "w"
action = "ModeChooseMoveWordDirection"
